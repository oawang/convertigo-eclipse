allprojects {
	apply plugin: 'java'
	version '7.5.0-beta'
	
	repositories {
		mavenLocal()
		maven {
			url "https://m2.convertigo.com"
		}
		maven {
			url "http://maven.teamdev.com/repository/products"
		}
		jcenter()
	}
	
	task syncLibs(type: Sync) {
		into 'lib'
		from configurations.runtime
	}
	
	task syncConf {
		doLast {
			if (file('templates').exists()) {
				def classpath = file('templates/classpath').text
				def manifest = file('templates/MANIFEST.MF').text
				fileTree('lib-webapp').each { f ->
					manifest += ',\n lib-webapp/' + f.name
					classpath += '\n\t<classpathentry kind="lib" path="lib-webapp/' + f.name + '"/>'
				}
				fileTree('lib').each { f ->
					manifest += ',\n lib/' + f.name
					classpath += '\n\t<classpathentry kind="lib" path="lib/' + f.name + '"/>'
				}
				file('.classpath').text = classpath + '\n</classpath>\n'
				file('META-INF/MANIFEST.MF').text = manifest + '\n'
			}
		}
	}
	
	task syncAll(dependsOn: [':convertigo-eclipse-plugin:syncWar', 'syncLibs', 'syncConf'])
	
	[syncAll, syncConf, syncLibs].each { t-> t.group = 'convertigo' }
}

project(':convertigo-eclipse-jxbrowser-win32') {
	dependencies {
		runtime 'com.teamdev.jxbrowser:jxbrowser-win:[6,)', { exclude module: 'jxbrowser'}
	}
}

project(':convertigo-eclipse-plugin') {
	configurations {
		war
	}
	
	dependencies {
		war 'com.convertigo.webapp:convertigo:' + version
		runtime 'com.convertigo.lib:jxbrowser-license:2017.04.26'
		runtime 'com.teamdev.jxbrowser:jxbrowser:[6,)'
		runtime 'org.apache.tomcat.embed:tomcat-embed-core:7.0.72'
		runtime 'org.apache.tomcat.embed:tomcat-embed-logging-log4j:7.0.72'
		runtime 'org.apache.tomcat:tomcat-dbcp:7.0.72'
		runtime 'org.apache.axis2:axis2-adb:1.6.2', { exclude module: 'servlet-api'}
	}
	
	task unzipWar(type: Copy) {
		from zipTree(configurations.war[0])
		into file('tomcat/webapps/convertigo')
	}
	
	task syncWar(dependsOn: unzipWar) {
		doLast {
			def dest = file('lib-webapp')
			delete dest
			file('tomcat/webapps/convertigo/WEB-INF/lib').renameTo(dest)
		}
	}
	
	syncWar.group = syncAll.group
}